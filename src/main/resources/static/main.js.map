{"version":3,"sources":["./src/app/store/product/product.selectors.ts","./src/environments/environment.ts","./src/app/store/posts/posts.selectors.ts","./src/app/store/posts/posts.state.ts","./src/app/store/product/product.actions.ts","./src/app/card-product/card-product.component.ts","./src/app/card-product/card-product.component.html","./src/app/store/posts/posts.actions.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/new-posts/new-posts.component.ts","./src/app/new-posts/new-posts.component.html","./src/app/app.module.ts","./src/app/store/product/product.state.ts","./src/services/api.service.ts","./src/app/list-posts/list-posts.component.ts","./src/app/list-posts/list-posts.component.html","./src/app/app-routing.module.ts","./src/app/store-item/store-item.component.ts","./src/app/store-item/store-item.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Selector } from \"@ngxs/store\";\nimport { ProductStateModel } from \"./product.model\";\nimport { ProductsState } from \"./product.state\";\n\nexport class ProductSelectors {\n    @Selector([ProductsState])\n    static getProducts(state: ProductStateModel) { return state.products; }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Selector } from \"@ngxs/store\";\nimport { Posts, PostsStateModel } from \"./posts.model\";\nimport { PostsState } from \"./posts.state\";\n\nexport class PostSelectors {\n    @Selector([PostsState])\n    static getPosts(state: PostsStateModel) { return state.posts; }\n}\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { PostsStateModel } from './posts.model';\nimport { AddPost, RemovePost } from './posts.actions';\n\n@State({\n    name: 'posts',\n    defaults: {\n        posts: []\n    }\n})\nexport class PostsState {\n\n    @Action(AddPost)\n    add({ getState, patchState }: StateContext<PostsStateModel>, { payload }: AddPost) {\n        const state = getState();\n        patchState({\n            posts: [...state.posts, payload]\n        });\n    }\n\n    @Action(RemovePost)\n    remove({ getState, patchState }: StateContext<PostsStateModel>, { payload }: RemovePost) {\n        patchState({\n            posts: getState().posts.filter(post => post.id !== payload)\n        });\n    }\n}","import { Product } from './product.model';\n\nexport class AddProduct {\n    static readonly type = '[PRODUCT] Add';\n    constructor(public payload: Product) { }\n}\nexport class RemoveProduct {\n    static readonly type = '[PRODUCT] Remove';\n    constructor(public payload: string) { }\n}\n\nexport class LoadProducts {\n    static readonly type = '[PRODUCT] Load';\n    constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { LoadProducts } from '../store/product/product.actions';\nimport { Product } from '../store/product/product.model';\nimport { ProductSelectors } from '../store/product/product.selectors';\n\n@Component({\n\tselector: 'app-card-product',\n\ttemplateUrl: './card-product.component.html',\n\tstyleUrls: ['./card-product.component.sass']\n})\nexport class CardProductComponent implements OnInit {\n\t@Select(ProductSelectors.getProducts)\n\tpublic products$: Observable<Product[]>;\n\n\tconstructor(\n\t\tprivate store: Store \n\t\t) { }\n\n\tngOnInit() {\n\t\tthis.store.dispatch(new LoadProducts());\n\t}\n}\n","<div style=\"padding: 13px;\">\n    <mat-spinner *ngIf=\"(products$ | async).length === 0\"></mat-spinner>\n\n    <mat-card *ngFor=\"let product of (products$ | async)\" style=\"margin-top:10px;\">\n        <mat-card-header>\n            <mat-card-title>{{product.name}}</mat-card-title>\n            <mat-card-subtitle>{{product.price}} $/ {{product.quantity}}\n            </mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <p>\n                {{product.description}}\n            </p>\n            <img style=\"height:100%; width: 100%;\" src=\"{{ product.imageUrl }}\" />\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button> Buy product</button>\n        </mat-card-actions>\n    </mat-card>\n</div>","import { Posts } from './posts.model';\n\nexport class AddPost {\n    static readonly type = '[POSTS] Add';\n    constructor(public payload: Posts) { }\n}\nexport class RemovePost {\n    static readonly type = '[POSTS] Remove';\n    constructor(public payload: string) { }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'angular-full-stack-tech';\n}\n","<div class=\"container\">\n  <mat-toolbar color=\"primary\">\n    <h1>\n      My Angular Store\n    </h1>\n    <button mat-button routerLink=\"/\">Store item</button>\n    <button mat-button routerLink=\"/product\">Product</button>\n  </mat-toolbar>\n  <router-outlet></router-outlet>\n</div>","import { Component, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\nimport { Store } from '@ngxs/store';\nimport { AddPost } from '../store/posts/posts.actions';\nimport { v4 as uuid } from 'uuid';\n\n\n@Component({\n  selector: 'app-new-posts',\n  templateUrl: './new-posts.component.html',\n  styleUrls: ['./new-posts.component.sass']\n})\nexport class NewPostsComponent implements OnInit {\n  public text: string = '';\n  requiredFormControl = new FormControl('', [Validators.required]);\n  \n  constructor(\n    private store: Store,\n  ) { }\n  ngOnInit() {\n  }\n  public addPost() {\n    this.store.dispatch(new AddPost({ id: uuid(), text: this.text }));\n  }\n  \n  getErrorMessage() {\n    if (this.requiredFormControl.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.requiredFormControl.hasError('email') ? 'Not a valid email' : '';\n  }\n\n}","\n<mat-form-field appearance=\"fill\">\n    <mat-label>Enter a new post text</mat-label>\n    <input matInput placeholder=\"Some post\" [(ngModel)]=\"text\" [formControl]=\"requiredFormControl\" required>\n    <mat-error *ngIf=\"requiredFormControl.invalid\">{{getErrorMessage()}}</mat-error>\n</mat-form-field>\n<button mat-raised-button color=\"accent\" (click)=\"addPost()\">Submit</button>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxsModule } from '@ngxs/store';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { environment } from 'src/environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListPostsComponent } from './list-posts/list-posts.component';\nimport { NewPostsComponent } from './new-posts/new-posts.component';\nimport { PostsState } from './store/posts/posts.state';\nimport { CardProductComponent } from './card-product/card-product.component';\nimport { StoreItemComponent } from './store-item/store-item.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductsState } from './store/product/product.state';\n\nvar MaterialModules = [\n  MatFormFieldModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatProgressSpinnerModule\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListPostsComponent,\n    NewPostsComponent,\n    CardProductComponent,\n    StoreItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgxsModule.forRoot([],\n      { developmentMode: !environment.production }\n    ),\n    NgxsReduxDevtoolsPluginModule.forRoot({\n      disabled: environment.production\n    }),\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    }),\n    NgxsModule.forRoot([\n      PostsState,\n      ProductsState\n    ]),\n    MaterialModules,\n    FormsModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { ProductStateModel } from './product.model';\nimport { AddProduct, LoadProducts, RemoveProduct } from './product.actions';\nimport { ApiService } from \"src/services/api.service\";\nimport { Injectable } from '@angular/core';\n\n@State({\n    name: 'products',\n    defaults: {\n        products: []\n    }\n})\n@Injectable()\nexport class ProductsState {\n\n    constructor(private apiService: ApiService) {\n    }\n\n    @Action(AddProduct)\n    add({ getState, patchState }: StateContext<ProductStateModel>, { payload }: AddProduct) {\n        const state = getState();\n        patchState({\n            products: [...state.products, payload]\n        });\n    }\n\n    @Action(RemoveProduct)\n    remove({ getState, patchState }: StateContext<ProductStateModel>, { payload }: RemoveProduct) {\n        patchState({\n            products: getState().products.filter(product => product.name !== payload)\n        });\n    }\n\n\n    @Action(LoadProducts)\n    load({ getState, patchState }: StateContext<ProductStateModel>, { }: LoadProducts) {\n        const state = getState();\n\n        this.apiService.getProducts().subscribe((data: any[]) => {\n            console.log(data);\n            patchState({\n                products: data\n            });\n        })\n\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private SERVER_URL = \"http://localhost:3000\";\n\n  constructor(private httpClient: HttpClient) { }\n  \n  public getProducts() {\n    return this.httpClient.get(this.SERVER_URL+'/products');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store, Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Posts } from '../store/posts/posts.model';\nimport { RemovePost } from '../store/posts/posts.actions';\nimport { PostSelectors } from '../store/posts/posts.selectors';\nimport { ProductSelectors } from '../store/product/product.selectors';\nimport { Product } from '../store/product/product.model';\n\n\n@Component({\n  selector: 'app-list-posts',\n  templateUrl: './list-posts.component.html',\n  styleUrls: ['./list-posts.component.sass']\n})\nexport class ListPostsComponent implements OnInit {\n\n\n  @Select(PostSelectors.getPosts)\n  public posts$: Observable<Posts[]>;\n\n  constructor(\n    private store: Store\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  public removePost(id: string) {\n    this.store.dispatch(new RemovePost(id));\n  }\n\n}\n","<ul>\n    <li  *ngFor=\"let post of posts$ | async\">\n        <div class=\"card\">\n            <div class=\"card-content\">\n                <p class=\"id\"><small>ID: {{ post.id }}</small></p>\n                <p>{{ post.text }}</p>\n                <button mat-raised-button color=\"accent\" (click)=\"removePost(post.id)\">Delete</button>\n            </div>\n        </div>\n    </li>\n</ul>\n<div class=\"notification is-danger\" *ngIf=\"(posts$ | async).length == 0\">\n    No Posts :(\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CardProductComponent } from './card-product/card-product.component';\nimport { StoreItemComponent } from './store-item/store-item.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'store', pathMatch: 'full'},\n  { path: 'store', component: StoreItemComponent },\n  { path: 'product', component: CardProductComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-store-item',\n  templateUrl: './store-item.component.html',\n  styleUrls: ['./store-item.component.sass']\n})\nexport class StoreItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"columns\">\n    <div class=\"column\">\n        <app-new-posts></app-new-posts>\n    </div>\n    <div class=\"column\">\n        <app-list-posts></app-list-posts>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}